package com.ordersum.model;

import org.hibernate.*;

import com.member.model.MemberDAO;
import com.member.model.MemberVO;

import hibernate.util.HibernateUtil;

import java.sql.Date;
import java.util.*;

public class OrderSumDAO implements OrderSumDAO_Interface {
	private static final String GET_ALL_STMT = "from OrderSumVO order by OrderSumID";
	@Override
	public void insert(OrderSumVO orderSumVO) {
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			session.beginTransaction();
			session.saveOrUpdate(orderSumVO);
			session.getTransaction().commit();
		} catch (RuntimeException ex) {
			session.getTransaction().rollback();
			throw ex;
		}
	}

	@Override
	public void update(OrderSumVO orderSumVO) {
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			session.beginTransaction();
			session.saveOrUpdate(orderSumVO);
			session.getTransaction().commit();
		} catch (RuntimeException ex) {
			session.getTransaction().rollback();
			throw ex;
		}
	}

	@Override
	public void delete(Integer OrderSumID) {
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			session.beginTransaction();
//			Query query = session.createQuery("delete OrderSumVO where OrderSumID=?");
//			query.setParameter(0, OrderSumID);
			
			OrderSumVO orderSumVO = new OrderSumVO();
			orderSumVO.setOrderSumID(OrderSumID);
			session.delete(orderSumVO);
			
			session.getTransaction().commit();
		} catch (RuntimeException ex) {
			session.getTransaction().rollback();
			throw ex;
		}
	}

	@Override
	public OrderSumVO getByPrimaryKey(Integer OrderSumID) {
		OrderSumVO orderSumVO = null;
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			session.beginTransaction();
			orderSumVO = (OrderSumVO) session.get(OrderSumVO.class, OrderSumID);
			session.getTransaction().commit();
		} catch (RuntimeException ex) {
			session.getTransaction().rollback();
			throw ex;
		}
		return orderSumVO;
	}
	@Override
	public OrderSumVO getByExpectTime(Date ExpectTime) {
		OrderSumVO orderSumVO = null;
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			session.beginTransaction();
			orderSumVO = (OrderSumVO) session.get(OrderSumVO.class, ExpectTime);
			session.getTransaction().commit();
		} catch (RuntimeException ex) {
			session.getTransaction().rollback();
			throw ex;
		}
		return orderSumVO;
	}

	@Override
	public OrderSumVO getByOrderCondID(Integer OrderCondID) {
		OrderSumVO orderSumVO = null;
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			session.beginTransaction();
			Query query = session.createQuery("from OrderSumVO where OrderCondID=?");
			query.setParameter(0, OrderCondID);
//			orderSumVO = (OrderSumVO) session.get(OrderSumVO.class, OrderCondID);
			session.getTransaction().commit();
		} catch (RuntimeException ex) {
			session.getTransaction().rollback();
			throw ex;
		}
		return orderSumVO;
	}
	
	@Override
	public List<OrderSumVO> getAll() {
		List<OrderSumVO> list = null;
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			session.beginTransaction();
			Query query = session.createQuery(GET_ALL_STMT);
			list = query.list();
			session.getTransaction().commit();
		} catch (RuntimeException ex) {
			session.getTransaction().rollback();
			throw ex;
		}
		return list;
	}

	public static void main(String[] args) {
		OrderSumDAO ordersumdao = new OrderSumDAO();
		//新增
		OrderSumVO ordersumvo1 = new OrderSumVO();   
//		ordersumvo1.setOrderSumID();
//		ordersumvo1.setRestID(2);
//		ordersumvo1.setMemberAcc("Bad5566");
//		ordersumvo1.setMemberPhone("0266316666");
//		ordersumvo1.setCity("台北市");
//		ordersumvo1.setArea	("大安區");
//		ordersumvo1.setAddr("大安路");
//		ordersumvo1.setTotalPrice(500);
//		ordersumvo1.setOrderTime(java.sql.Date.valueOf("2012-12-12"));
//		ordersumvo1.setExpectTime(java.sql.Date.valueOf("2012-12-13"));
//		ordersumvo1.setMemo("讚");
//		ordersumvo1.setOrderCondID(2);
//		ordersumdao.insert(ordersumvo1);
//		java.sql.Date.valueOf("2005-01-01")
//		//修改
//		OrderSumVO ordersumvo2 = new OrderSumVO();
//		ordersumvo2.setRestID(2);
//		ordersumvo2.setMemberAcc("Bad5566");
//		ordersumvo2.setMemberPhone("0266316666");
//		ordersumvo2.setCity("台北市");
//		ordersumvo2.setArea	("大安區");
//		ordersumvo2.setAddr("忠孝東路");
//		ordersumvo2.setTotalPrice(300);
//		ordersumvo2.setOrderTime(java.sql.Date.valueOf("2012-12-12"));
//		ordersumvo2.setExpectTime(java.sql.Date.valueOf("2012-12-13"));
//		ordersumvo2.setMemo("讚");
//		ordersumvo2.setOrderCondID(2);
//		ordersumdao.update(ordersumvo2);
//		
//		//刪除(小心cascade - 多方emp2.hbm.xml如果設為 cascade="all"或
//		// cascade="delete"將會刪除所有相關資料-包括所屬部門與同部門的其它員工將會一併被刪除)
//		ordersumdao.delete();
//				
//		//findByPrimaryKey (多方emp2.hbm.xml必須設為lazy="false")(優!)

//		getByPrimaryKey
//		OrderSumVO membervo3 = ordersumdao.getByPrimaryKey(5);
//		System.out.print(membervo3.getRestID() + ",");
//		System.out.print(membervo3.getMemberAcc() + ",");
//		System.out.print(membervo3.getMemberPhone() + ",");
//		System.out.print(membervo3.getAddr() + ",");
//		System.out.print(membervo3.getTotalPrice() + ",");
//		System.out.print(membervo3.getOrderTime() + ",");
//		System.out.print(membervo3.getExpectTime() + ",");
//		System.out.print(membervo3.getMemo() + ",");
//		System.out.print(membervo3.getOrderCondID());
//		System.out.println("\n---------------------");
		
//		getByExpectTime
//		getByOrderCond
		
		//方法要改Query  
		Integer OrderCondID = 2;
		OrderSumVO membervo4 = ordersumdao.getByOrderCondID(OrderCondID);

//		System.out.print(membervo4.getOrderSumID() + ",");
//		System.out.print(membervo4.getRestID() + ",");
//		System.out.print(membervo4.getMemberAcc() + ",");
//		System.out.print(membervo4.getMemberPhone() + ",");
//		System.out.print(membervo4.getAddr() + ",");
//		System.out.print(membervo4.getTotalPrice() + ",");
//		System.out.print(membervo4.getOrderTime() + ",");
//		System.out.print(membervo4.getExpectTime() + ",");
//		System.out.print(membervo4.getMemo() + ",");
//		System.out.println("\n---------------------");
//		
		//印出全部  測試用
		List<OrderSumVO> ordersumlist = ordersumdao.getAll();
		for (OrderSumVO ordersum : ordersumlist) {
			System.out.print(ordersum.getRestID() + ",");
			System.out.print(ordersum.getMemberAcc() + ",");
			System.out.print(ordersum.getMemberPhone() + ",");
			System.out.print(ordersum.getAddr() + ",");
			System.out.print(ordersum.getTotalPrice() + ",");
			System.out.print(ordersum.getOrderTime() + ",");
			System.out.print(ordersum.getExpectTime() + ",");
			System.out.print(ordersum.getMemo() + ",");
			System.out.print(ordersum.getOrderCondID());
			System.out.println();
		}
	}



}

DBScribe Report for Project HibernateComponentMappingExample
There are 12 database-related methods (out of 28 methods).

Among them, there are 11 SQL Operating Methods, 1 Local SQL Methods, 0 Delegated SQL Methods.

-----------------------------------------------------------

[M-1, SQLOperatingMethod] com.mkyong.customer.Customer.Customer()
-- This method implements the following db-related operations: 
- It constructs customer without any initial value
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-2, SQLOperatingMethod] com.mkyong.customer.Customer.getCustId()
-- This method implements the following db-related operations: 
- It gets attribute CUST_ID from table customer
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-3, SQLOperatingMethod] com.mkyong.customer.Customer.setCustId(Integer)
-- This method implements the following db-related operations: 
- It sets attribute CUST_ID from table customer
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- Primary key: customer.CUST_ID (type=java.lang.Integer)

-----------------------------------------------------------

[M-4, SQLOperatingMethod] com.mkyong.customer.Customer.getCustName()
-- This method implements the following db-related operations: 
- It gets attribute CUST_NAME from table customer
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-5, SQLOperatingMethod] com.mkyong.customer.Customer.setCustName(String)
-- This method implements the following db-related operations: 
- It sets attribute CUST_NAME from table customer
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- customer.CUST_NAME (type=string, length=10, not-null=true)

-----------------------------------------------------------

[M-6, SQLOperatingMethod] com.mkyong.customer.Customer.getAge()
-- This method implements the following db-related operations: 
- It gets attribute AGE from table customer
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-7, SQLOperatingMethod] com.mkyong.customer.Customer.setAge(int)
-- This method implements the following db-related operations: 
- It sets attribute AGE from table customer
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- customer.AGE (type=int, not-null=true)

-----------------------------------------------------------

[M-8, SQLOperatingMethod] com.mkyong.customer.Customer.getCreatedDate()
-- This method implements the following db-related operations: 
- It gets attribute CREATED_DATE from table customer
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-9, SQLOperatingMethod] com.mkyong.customer.Customer.setCreatedDate(Date)
-- This method implements the following db-related operations: 
- It sets attribute CREATED_DATE from table customer
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- customer.CREATED_DATE (type=date, length=10, not-null=true)

-----------------------------------------------------------

[M-10, SQLOperatingMethod] com.mkyong.customer.Customer.getCreatedBy()
-- This method implements the following db-related operations: 
- It gets attribute CREATED_BY from table customer
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-11, SQLOperatingMethod] com.mkyong.customer.Customer.setCreatedBy(String)
-- This method implements the following db-related operations: 
- It sets attribute CREATED_BY from table customer
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- customer.CREATED_BY (type=string, length=10, not-null=true)

-----------------------------------------------------------

[M-12, LocalSQLMethod] com.mkyong.App.main(String)
-- This method implements the following db-related operations: 
- It inserts CUST_NAME, AGE, CREATED_DATE, CREATED_BY into table customer

-- This method invokes db-related operations via delegation: 
Via call-chain: com.mkyong.App.main --> com.mkyong.customer.Customer.Customer
- It constructs customer without any initial value

Via call-chain: com.mkyong.App.main --> com.mkyong.customer.Customer.setCustName
- It sets attribute CUST_NAME from table customer

Via call-chain: com.mkyong.App.main --> com.mkyong.customer.Customer.setAge
- It sets attribute AGE from table customer

Via call-chain: com.mkyong.App.main --> com.mkyong.customer.Customer.setCreatedDate
- It sets attribute CREATED_DATE from table customer

Via call-chain: com.mkyong.App.main --> com.mkyong.customer.Customer.setCreatedBy
- It sets attribute CREATED_BY from table customer


-- Some constraints that should be taken into account are the following: 
- customer.CUST_NAME (type=string, length=10, not-null=true)
- customer.AGE (type=int, not-null=true)
- customer.CREATED_DATE (type=date, length=10, not-null=true)
- customer.CREATED_BY (type=string, length=10, not-null=true)

-----------------------------------------------------------


DBScribe Report for Project chat-springmvc-hibernate-master
There are 53 database-related methods.


-----------------------------------------------------------

[M-1, SQLOperatingMethod] com.mpakhomov.chat.domain.User.User()
-- This method implements the following db-related operations: 
- It constructs user without any initial value
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-2, DelegatedSQLMethod] com.mpakhomov.chat.controller.AdminController.createUser(Model)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.AdminController.createUser --> com.mpakhomov.chat.domain.User.User
- It constructs user without any initial value

-----------------------------------------------------------

[M-3, SQLOperatingMethod] com.mpakhomov.chat.domain.User.getId()
-- This method implements the following db-related operations: 
- It gets attribute id from table user
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-4, SQLOperatingMethod] com.mpakhomov.chat.domain.User.getNick()
-- This method implements the following db-related operations: 
- It gets attribute nick from table user
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-5, DelegatedSQLMethod] com.mpakhomov.chat.controller.AdminController.createOrUpdateUser(User, BindingResult, Boolean)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.AdminController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.AdminController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user

-----------------------------------------------------------

[M-6, DelegatedSQLMethod] com.mpakhomov.chat.controller.AdminController.addUserFromForm(User, BindingResult)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.AdminController.addUserFromForm --> com.mpakhomov.chat.controller.AdminController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.AdminController.addUserFromForm --> com.mpakhomov.chat.controller.AdminController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user

-----------------------------------------------------------

[M-7, DelegatedSQLMethod] com.mpakhomov.chat.controller.AdminController.saveUserProfile(User, BindingResult)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.AdminController.saveUserProfile --> com.mpakhomov.chat.controller.AdminController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.AdminController.saveUserProfile --> com.mpakhomov.chat.controller.AdminController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user

-----------------------------------------------------------

[M-8, DelegatedSQLMethod] com.mpakhomov.chat.controller.ProfileController.showRegistrationForm(Map<String,Object>)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.ProfileController.showRegistrationForm --> com.mpakhomov.chat.domain.User.User
- It constructs user without any initial value

-----------------------------------------------------------

[M-9, SQLOperatingMethod] com.mpakhomov.chat.domain.User.setNick(String)
-- This method implements the following db-related operations: 
- It sets attribute nick from table user
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.nick: (min=3, max=15, message=
 "Nick must be between 3 and 15 characters long"), (regexp="^[a-zA-Z0-9]+$",
 message="Nick must be alphanumeric with no spaces"), (unique=true), (nullable=false)

-----------------------------------------------------------

[M-10, SQLOperatingMethod] com.mpakhomov.chat.domain.User.getPassword()
-- This method implements the following db-related operations: 
- It gets attribute password from table user
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-11, SQLOperatingMethod] com.mpakhomov.chat.domain.User.setPassword(String)
-- This method implements the following db-related operations: 
- It sets attribute password from table user
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.password: (min=5, max=20,
 message="The password must be at least 5 characters long"), (nullable=false)

-----------------------------------------------------------

[M-12, DelegatedSQLMethod] com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser(User, BindingResult, Boolean)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.setNick
- It sets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.setPassword
- It sets attribute password from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getPassword
- It gets attribute password from table user


-- Some constraints that should be taken into account are the following: 
- user.nick: (min=3, max=15, message=
 "Nick must be between 3 and 15 characters long"), (regexp="^[a-zA-Z0-9]+$",
 message="Nick must be alphanumeric with no spaces"), (unique=true), (nullable=false)
- user.password: (min=5, max=20,
 message="The password must be at least 5 characters long"), (nullable=false)

-----------------------------------------------------------

[M-13, DelegatedSQLMethod] com.mpakhomov.chat.controller.ProfileController.addUserFromForm(User, BindingResult)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.ProfileController.addUserFromForm --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.addUserFromForm --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.setNick
- It sets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.addUserFromForm --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.addUserFromForm --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.setPassword
- It sets attribute password from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.addUserFromForm --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getPassword
- It gets attribute password from table user


-- Some constraints that should be taken into account are the following: 
- user.nick: (min=3, max=15, message=
 "Nick must be between 3 and 15 characters long"), (regexp="^[a-zA-Z0-9]+$",
 message="Nick must be alphanumeric with no spaces"), (unique=true), (nullable=false)
- user.password: (min=5, max=20,
 message="The password must be at least 5 characters long"), (nullable=false)

-----------------------------------------------------------

[M-14, DelegatedSQLMethod] com.mpakhomov.chat.controller.ProfileController.saveUserProfile(User, BindingResult)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.ProfileController.saveUserProfile --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.saveUserProfile --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.setNick
- It sets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.saveUserProfile --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.saveUserProfile --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.setPassword
- It sets attribute password from table user

Via call-chain: com.mpakhomov.chat.controller.ProfileController.saveUserProfile --> com.mpakhomov.chat.controller.ProfileController.createOrUpdateUser --> com.mpakhomov.chat.domain.User.getPassword
- It gets attribute password from table user


-- Some constraints that should be taken into account are the following: 
- user.nick: (min=3, max=15, message=
 "Nick must be between 3 and 15 characters long"), (regexp="^[a-zA-Z0-9]+$",
 message="Nick must be alphanumeric with no spaces"), (unique=true), (nullable=false)
- user.password: (min=5, max=20,
 message="The password must be at least 5 characters long"), (nullable=false)

-----------------------------------------------------------

[M-15, DelegatedSQLMethod] com.mpakhomov.chat.controller.ProfileController.editUserProfile(long, ModelMap)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.ProfileController.editUserProfile --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user

-----------------------------------------------------------

[M-16, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.ChatMessage(String, User)
-- This method implements the following db-related operations: 
- It constructs messages with attributes message, timestamp
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- messages.message: (nullable=false)
- messages.timestamp: (nullable = false)

-----------------------------------------------------------

[M-17, DelegatedSQLMethod] com.mpakhomov.chat.controller.HomeController.createTestData()
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.HomeController.createTestData --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.HomeController.createTestData --> com.mpakhomov.chat.domain.ChatMessage.ChatMessage
- It constructs messages with attributes message, timestamp


-- Some constraints that should be taken into account are the following: 
- messages.message: (nullable=false)
- messages.timestamp: (nullable = false)

-----------------------------------------------------------

[M-18, DelegatedSQLMethod] com.mpakhomov.chat.controller.HomeController.index(Map<String,Object>)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.HomeController.index --> com.mpakhomov.chat.controller.HomeController.createTestData --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.controller.HomeController.index --> com.mpakhomov.chat.controller.HomeController.createTestData --> com.mpakhomov.chat.domain.ChatMessage.ChatMessage
- It constructs messages with attributes message, timestamp


-- Some constraints that should be taken into account are the following: 
- messages.message: (nullable=false)
- messages.timestamp: (nullable = false)

-----------------------------------------------------------

[M-19, DelegatedSQLMethod] com.mpakhomov.chat.controller.HomeController.postChatMessage(String)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.HomeController.postChatMessage --> com.mpakhomov.chat.domain.ChatMessage.ChatMessage
- It constructs messages with attributes message, timestamp


-- Some constraints that should be taken into account are the following: 
- messages.message: (nullable=false)
- messages.timestamp: (nullable = false)

-----------------------------------------------------------

[M-20, DelegatedSQLMethod] com.mpakhomov.chat.controller.HomeController.register(Model)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.controller.HomeController.register --> com.mpakhomov.chat.domain.User.User
- It constructs user without any initial value

-----------------------------------------------------------

[M-21, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.getMessage()
-- This method implements the following db-related operations: 
- It gets attribute message from table messages
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-22, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.getTimestamp()
-- This method implements the following db-related operations: 
- It gets attribute timestamp from table messages
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-23, DelegatedSQLMethod] com.mpakhomov.chat.service.MessageServiceImpl.fetchChatHistory(int)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.service.MessageServiceImpl.fetchChatHistory --> com.mpakhomov.chat.domain.ChatMessage.getTimestamp
- It gets attribute timestamp from table messages

Via call-chain: com.mpakhomov.chat.service.MessageServiceImpl.fetchChatHistory --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.service.MessageServiceImpl.fetchChatHistory --> com.mpakhomov.chat.domain.ChatMessage.getMessage
- It gets attribute message from table messages

-----------------------------------------------------------

[M-24, DelegatedSQLMethod] com.mpakhomov.chat.service.UserServiceImpl.saveUser(User, boolean)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user


-----------------------------------------------------------

[M-25, DelegatedSQLMethod] com.mpakhomov.chat.service.UserServiceImpl.addUser(User)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.service.UserServiceImpl.addUser --> com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.service.UserServiceImpl.addUser --> com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user


-----------------------------------------------------------

[M-26, DelegatedSQLMethod] com.mpakhomov.chat.service.UserServiceImpl.saveUser(User)
-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.domain.User.getNick
- It gets attribute nick from table user

Via call-chain: com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.service.UserServiceImpl.saveUser --> com.mpakhomov.chat.domain.User.getId
- It gets attribute id from table user


-----------------------------------------------------------

[M-27, LocalSQLMethod] com.mpakhomov.chat.dao.MessageDaoImpl.getMessage(Long)
-- This method implements the following db-related operations: 
- It queries the table messages

-----------------------------------------------------------

[M-29, LocalSQLMethod] com.mpakhomov.chat.dao.MessageDaoImpl.addMessage(ChatMessage)
-- This method implements the following db-related operations: 
- It inserts id, message, timestamp into table messages

-----------------------------------------------------------

[M-31, LocalSQLMethod] com.mpakhomov.chat.dao.UserDaoImpl.getUser(Long)
-- This method implements the following db-related operations: 
- It queries the table user

-----------------------------------------------------------

[M-33, SQLOperatingMethod] com.mpakhomov.chat.domain.User.getMiddleName()
-- This method implements the following db-related operations: 
- It gets attribute middleName from table user
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-34, SQLOperatingMethod] com.mpakhomov.chat.domain.User.setMiddleName(String)
-- This method implements the following db-related operations: 
- It sets attribute middleName from table user
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.middleName: (max=15, message=
 "Middle name must be less than 15 characters long"), (regexp="^([a-zA-Z \\.])*$",
 message="Invalid characters"), (nullable=true)

-----------------------------------------------------------

[M-35, LocalSQLMethod] com.mpakhomov.chat.dao.UserDaoImpl.save(User)
-- This method implements the following db-related operations: 
- It inserts middleName into table user
- It saves or updates middleName into table user

-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.dao.UserDaoImpl.save --> com.mpakhomov.chat.domain.User.getMiddleName
- It gets attribute middleName from table user

Via call-chain: com.mpakhomov.chat.dao.UserDaoImpl.save --> com.mpakhomov.chat.domain.User.setMiddleName
- It sets attribute middleName from table user


-- Some constraints that should be taken into account are the following: 
- user.middleName: (max=15, message=
 "Middle name must be less than 15 characters long"), (regexp="^([a-zA-Z \\.])*$",
 message="Invalid characters"), (nullable=true)

-----------------------------------------------------------

[M-37, LocalSQLMethod] com.mpakhomov.chat.dao.UserDaoImpl.getAllUsers()
-- This method implements the following db-related operations: 
- It queries the table user

-----------------------------------------------------------

[M-39, LocalSQLMethod] com.mpakhomov.chat.dao.UserDaoImpl.delete(Long)
-- This method implements the following db-related operations: 
- It deletes rows from table user

-- This method invokes db-related operations via delegation: 
Via call-chain: com.mpakhomov.chat.dao.UserDaoImpl.delete --> com.mpakhomov.chat.dao.UserDaoImpl.getUser
- It queries the table user


-----------------------------------------------------------

[M-41, SQLOperatingMethod] com.mpakhomov.chat.domain.User.User(String)
-- This method implements the following db-related operations: 
- It constructs user with attributes id, firstName, middleName, lastName, nick, email, password
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.firstName: (min=2, max=15, message=
 "First name must be between 2 and 15 characters long"), (regexp="^[a-zA-Z]+$",
 message="Invalid characters"), (nullable=false)
- user.middleName: (max=15, message=
 "Middle name must be less than 15 characters long"), (regexp="^([a-zA-Z \\.])*$",
 message="Invalid characters"), (nullable=true)
- user.lastName: (max=15, message=
 "Last name must be between 2 and 15 characters long"), (regexp="^[a-zA-Z]+$",
 message="Invalid characters"), (nullable=false)
- user.nick: (min=3, max=15, message=
 "Nick must be between 3 and 15 characters long"), (regexp="^[a-zA-Z0-9]+$",
 message="Nick must be alphanumeric with no spaces"), (unique=true), (nullable=false)
- user.password: (min=5, max=20,
 message="The password must be at least 5 characters long"), (nullable=false)
- user.email: (regexp="[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}",
 message="Invalid email address"), (nullable=false)

-----------------------------------------------------------

[M-42, SQLOperatingMethod] com.mpakhomov.chat.domain.User.setId(Long)
-- This method implements the following db-related operations: 
- It sets attribute id from table user
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.firstName: (min=2, max=15, message=
 "First name must be between 2 and 15 characters long"), (regexp="^[a-zA-Z]+$",
 message="Invalid characters"), (nullable=false)
- user.middleName: (max=15, message=
 "Middle name must be less than 15 characters long"), (regexp="^([a-zA-Z \\.])*$",
 message="Invalid characters"), (nullable=true)
- user.lastName: (max=15, message=
 "Last name must be between 2 and 15 characters long"), (regexp="^[a-zA-Z]+$",
 message="Invalid characters"), (nullable=false)
- user.email: (regexp="[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}",
 message="Invalid email address"), (nullable=false)

-----------------------------------------------------------

[M-43, SQLOperatingMethod] com.mpakhomov.chat.domain.User.getFirstName()
-- This method implements the following db-related operations: 
- It gets attribute firstName from table user
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-44, SQLOperatingMethod] com.mpakhomov.chat.domain.User.setFirstName(String)
-- This method implements the following db-related operations: 
- It sets attribute firstName from table user
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.firstName: (min=2, max=15, message=
 "First name must be between 2 and 15 characters long"), (regexp="^[a-zA-Z]+$",
 message="Invalid characters"), (nullable=false)

-----------------------------------------------------------

[M-45, SQLOperatingMethod] com.mpakhomov.chat.domain.User.getLastName()
-- This method implements the following db-related operations: 
- It gets attribute lastName from table user
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-46, SQLOperatingMethod] com.mpakhomov.chat.domain.User.setLastName(String)
-- This method implements the following db-related operations: 
- It sets attribute lastName from table user
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.lastName: (max=15, message=
 "Last name must be between 2 and 15 characters long"), (regexp="^[a-zA-Z]+$",
 message="Invalid characters"), (nullable=false)

-----------------------------------------------------------

[M-47, SQLOperatingMethod] com.mpakhomov.chat.domain.User.getEmail()
-- This method implements the following db-related operations: 
- It gets attribute email from table user
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-48, SQLOperatingMethod] com.mpakhomov.chat.domain.User.setEmail(String)
-- This method implements the following db-related operations: 
- It sets attribute email from table user
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- user.email: (regexp="[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}",
 message="Invalid email address"), (nullable=false)

-----------------------------------------------------------

[M-49, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.ChatMessage()
-- This method implements the following db-related operations: 
- It constructs messages without any initial value
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-50, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.getId()
-- This method implements the following db-related operations: 
- It gets attribute id from table messages
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-51, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.setId(Long)
-- This method implements the following db-related operations: 
- It sets attribute id from table messages
*Note: This method will not affect the database util Session built-in function is called

-----------------------------------------------------------

[M-52, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.setMessage(String)
-- This method implements the following db-related operations: 
- It sets attribute message from table messages
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- messages.message: (nullable=false)
- messages.timestamp: (nullable = false)

-----------------------------------------------------------

[M-53, SQLOperatingMethod] com.mpakhomov.chat.domain.ChatMessage.setTimestamp(Date)
-- This method implements the following db-related operations: 
- It sets attribute timestamp from table messages
*Note: This method will not affect the database util Session built-in function is called

-- Some constraints that should be taken into account are the following: 
- messages.timestamp: (nullable = false)

-----------------------------------------------------------


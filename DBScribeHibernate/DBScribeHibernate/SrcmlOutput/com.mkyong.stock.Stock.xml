<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="E:\workspace_hibernate\HibernateOneToOneAnnotation\src\main\java\com\mkyong\stock\Stock.java"><package>package <name><name>com</name>.<name>mkyong</name>.<name>stock</name></name>;</package>

<import>import <name><name>javax</name>.<name>persistence</name>.<name>CascadeType</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>Column</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>Entity</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>FetchType</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>GeneratedValue</name></name>;</import>
<import>import static <name><name>javax</name>.<name>persistence</name>.<name>GenerationType</name>.<name>IDENTITY</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>Id</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>OneToOne</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>Table</name></name>;</import>
<import>import <name><name>javax</name>.<name>persistence</name>.<name>UniqueConstraint</name></name>;</import>

<class><annotation>@<name>Entity</name></annotation>
<annotation>@<name>Table</name><argument_list>(<argument><expr><name>name</name> = "stock"</expr></argument>, <argument><expr><name>catalog</name> = "mkyongdb"</expr></argument>, <argument><expr><name>uniqueConstraints</name> = <block>{
		<annotation>@<name>UniqueConstraint</name><argument_list>(<argument><expr><name>columnNames</name> = "STOCK_NAME"</expr></argument>)</argument_list></annotation>,
		<argument><annotation>@<name>UniqueConstraint</name><argument_list>(<argument><expr><name>columnNames</name> = "STOCK_CODE"</expr></argument>)</argument_list></annotation></argument> }</block></expr></argument>)</argument_list></annotation>
<specifier>public</specifier> class <name>Stock</name> <super><implements>implements <name><name>java</name>.<name>io</name>.<name>Serializable</name></name></implements></super> <block>{

	<decl_stmt><decl><type><specifier>private</specifier> <name>Integer</name></type> <name>stockId</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>stockCode</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>stockName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier>private</specifier> <name>StockDetail</name></type> <name>stockDetail</name></decl>;</decl_stmt>

	<constructor><specifier>public</specifier> <name>Stock</name><parameter_list>()</parameter_list> <block>{
	}</block></constructor>

	<constructor><specifier>public</specifier> <name>Stock</name><parameter_list>(<param><decl><type><name>String</name></type> <name>stockCode</name></decl></param>, <param><decl><type><name>String</name></type> <name>stockName</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name>.<name>stockCode</name></name> = <name>stockCode</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>this</name>.<name>stockName</name></name> = <name>stockName</name></expr>;</expr_stmt>
	}</block></constructor>

	<constructor><specifier>public</specifier> <name>Stock</name><parameter_list>(<param><decl><type><name>String</name></type> <name>stockCode</name></decl></param>, <param><decl><type><name>String</name></type> <name>stockName</name></decl></param>, <param><decl><type><name>StockDetail</name></type> <name>stockDetail</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name>.<name>stockCode</name></name> = <name>stockCode</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>this</name>.<name>stockName</name></name> = <name>stockName</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>this</name>.<name>stockDetail</name></name> = <name>stockDetail</name></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><annotation>@<name>Id</name></annotation>
	<annotation>@<name>GeneratedValue</name><argument_list>(<argument><expr><name>strategy</name> = <name>IDENTITY</name></expr></argument>)</argument_list></annotation>
	<annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> = "STOCK_ID"</expr></argument>, <argument><expr><name>unique</name> = true</expr></argument>, <argument><expr><name>nullable</name> = false</expr></argument>)</argument_list></annotation>
	<specifier>public</specifier> <name>Integer</name></type> <name>getStockId</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><name><name>this</name>.<name>stockId</name></name></expr>;</return>
	}</block></function>

	<function><type><specifier>public</specifier> <name>void</name></type> <name>setStockId</name><parameter_list>(<param><decl><type><name>Integer</name></type> <name>stockId</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name>.<name>stockId</name></name> = <name>stockId</name></expr>;</expr_stmt>
	}</block></function>

	<function><type><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> = "STOCK_CODE"</expr></argument>, <argument><expr><name>unique</name> = true</expr></argument>, <argument><expr><name>nullable</name> = false</expr></argument>, <argument><expr><name>length</name> = 10</expr></argument>)</argument_list></annotation>
	<specifier>public</specifier> <name>String</name></type> <name>getStockCode</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><name><name>this</name>.<name>stockCode</name></name></expr>;</return>
	}</block></function>

	<function><type><specifier>public</specifier> <name>void</name></type> <name>setStockCode</name><parameter_list>(<param><decl><type><name>String</name></type> <name>stockCode</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name>.<name>stockCode</name></name> = <name>stockCode</name></expr>;</expr_stmt>
	}</block></function>

	<function><type><annotation>@<name>Column</name><argument_list>(<argument><expr><name>name</name> = "STOCK_NAME"</expr></argument>, <argument><expr><name>unique</name> = true</expr></argument>, <argument><expr><name>nullable</name> = false</expr></argument>, <argument><expr><name>length</name> = 20</expr></argument>)</argument_list></annotation>
	<specifier>public</specifier> <name>String</name></type> <name>getStockName</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><name><name>this</name>.<name>stockName</name></name></expr>;</return>
	}</block></function>

	<function><type><specifier>public</specifier> <name>void</name></type> <name>setStockName</name><parameter_list>(<param><decl><type><name>String</name></type> <name>stockName</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name>.<name>stockName</name></name> = <name>stockName</name></expr>;</expr_stmt>
	}</block></function>

	<function><type><annotation>@<name>OneToOne</name><argument_list>(<argument><expr><name>fetch</name> = <name><name>FetchType</name>.<name>LAZY</name></name></expr></argument>, <argument><expr><name>mappedBy</name> = "stock"</expr></argument>, <argument><expr><name>cascade</name> = <name><name>CascadeType</name>.<name>ALL</name></name></expr></argument>)</argument_list></annotation>
	<specifier>public</specifier> <name>StockDetail</name></type> <name>getStockDetail</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><name><name>this</name>.<name>stockDetail</name></name></expr>;</return>
	}</block></function>

	<function><type><specifier>public</specifier> <name>void</name></type> <name>setStockDetail</name><parameter_list>(<param><decl><type><name>StockDetail</name></type> <name>stockDetail</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name>.<name>stockDetail</name></name> = <name>stockDetail</name></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>
